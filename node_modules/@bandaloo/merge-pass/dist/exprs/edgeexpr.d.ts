import { Float, Vec4 } from "../exprtypes";
import { PrimitiveFloat, WrappedExpr } from "./expr";
import { OpExpr } from "./opexpr";
export declare class EdgeExpr extends WrappedExpr<Vec4> {
    mult: Float;
    operator: OpExpr<Float, Float>;
    constructor(mult?: Float, samplerNum?: number);
    setMult(mult: PrimitiveFloat | number): void;
}
/**
 * returns an expression highlights edges where they appear
 * @param style `"dark"` for dark edges and `"light"` for light edges, or a
 * custom number or expression (between -1 and 1) for a more gray style of edge
 * @param samplerNum where to sample from
 */
export declare function edge(style: Float | number | "dark" | "light", samplerNum?: number): EdgeExpr;
