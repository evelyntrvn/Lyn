import { AllVals, Float, Vec2, Vec3, Vec4 } from "../exprtypes";
import { Operator as Op } from "./expr";
export declare class TernaryExpr<T extends AllVals, U extends AllVals> extends Op<T> {
    success: T;
    failure: U;
    constructor(floats: Float[], success: T, failure: U);
}
export declare function ternary<T extends Float, U extends Float>(floats: Float[], success: T, failure: U): TernaryExpr<T, U>;
export declare function ternary<T extends Vec2, U extends Vec2>(floats: Float[], success: T, failure: U): TernaryExpr<T, U>;
export declare function ternary<T extends Vec3, U extends Vec3>(floats: Float[], success: T, failure: U): TernaryExpr<T, U>;
export declare function ternary<T extends Vec3, U extends Vec4>(floats: Float[], success: T, failure: U): TernaryExpr<T, U>;
